name: hydration pipeline
on:
  pull_request:
    types: [opened, synchronize, reopened]
run-name: hydrate-in-repo
permissions: write-all

jobs:
  # generate and upload hydrated files
  hydrate:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-python@v5
      with:
        python-version: '3.12'
    - run: pip install -r cli/requirements.txt
    - run: cli/hydrate.py -v --hydrated output/ --output-subdir=group source_of_truth.csv
    - uses: actions/upload-artifact@v2
      with:
        name: hydrated-resources
        path: output/*

  # commit changes to hydrated files (if any)
  commit-changes:
    needs: [hydrate]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: checkout PR
      uses: actions/checkout@v4
      with:
        ref: ${{ github.event.pull_request.head.ref }}
        token: ${{ secrets.GITHUB_TOKEN }}
    - name: delete contents of hydrated folder except .gitkeep
      run: |
        set -x
        find ./hydrated -mindepth 1 ! -name ".gitkeep" -delete
    - name: download newly hydrated files into hydrated folder
      uses: actions/download-artifact@v2
      with:
        name: hydrated-resources
        path: hydrated/
    - name: commit changes
      id: commit-changes
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        set -x

        git add ./hydrated/

        # git diff for hydrated files between last two commits
        if [ -z "$(git diff --name-status --cached)" ]; then
          echo "No changes to hydrated files"
        else
          echo "Found changes to hydrated files"
          git config --global user.name "Hydrate Bot"
          git config --global user.email "hydrate-bot@github.com"
          git commit -m ":robot: Add Hydrated Files :robot:"
          git push origin HEAD
          echo "COMMIT_SHA=$(git rev-parse HEAD)" >> $GITHUB_OUTPUT
        fi
    outputs:
      COMMIT_SHA: ${{ steps.commit-changes.outputs.COMMIT_SHA }}

  # update PR with details of hydration-related changes
  report-results:
    needs: [commit-changes]
    if: ${{ needs.commit-changes.outputs.COMMIT_SHA }}
    runs-on: ubuntu-latest
    steps:
    - name: checkout PR
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        ref: ${{ github.event.pull_request.head.ref }}
        token: ${{ secrets.GITHUB_TOKEN }}
    - name: calculate changes for hydrated files between the PR's base commit and the latest commit
      id: calculate-changes
      run: |
        set -x

        # git diff for hydrated files between the PR's base commit and the latest commit
        DIFF=$(git diff-tree -r --name-status --no-renames \
          "${{ github.event.pull_request.base.sha }}" \
          "${{ needs.commit-changes.outputs.COMMIT_SHA }}" | \
          grep "hydrated/"  || true)

        ADDED=$(grep -c "^A" <<< "$DIFF" || true)
        DELETED=$(grep -c "^D" <<< "$DIFF" || true)
        MODIFIED=$(grep -c "^M" <<< "$DIFF" || true)

        echo "NUM_ADDED_CLUSTERS=${ADDED}" >> $GITHUB_OUTPUT
        echo "NUM_DELETED_CLUSTERS=${DELETED}" >> $GITHUB_OUTPUT
        echo "NUM_MODIFIED_CLUSTERS=${MODIFIED}" >> $GITHUB_OUTPUT
    - name: create report
      id: create-report
      run: |
        echo "REPORT<<EOF" >> $GITHUB_OUTPUT
        echo ":rocket: Clusters Added: ${{ steps.calculate-changes.outputs.NUM_ADDED_CLUSTERS }}" >> $GITHUB_OUTPUT
        echo ":gear: Modified Clusters: ${{ steps.calculate-changes.outputs.NUM_MODIFIED_CLUSTERS }}" >> $GITHUB_OUTPUT
        echo ":x: Deleted Clusters: ${{ steps.calculate-changes.outputs.NUM_DELETED_CLUSTERS }}" >> $GITHUB_OUTPUT
        echo "EOF" >> $GITHUB_OUTPUT
    - name: update PR Description
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        set -x
        HEADER=$(cat <<EOF
        | :no_entry::no_entry: AUTOGENERATED AND UPDATED CONTENT IN TABLE - DO NOT MODIFY :no_entry::no_entry: |
        | --- |
        EOF
        )
        echo "${{ github.event.pull_request.body }}" > description.txt
        sed -i '/^| :no_entry::no_entry:.*/,$d' description.txt
        echo "${HEADER}" >> description.txt
        echo "${{ steps.create-report.outputs.REPORT }}" >> description.txt
        gh pr edit $PR_NUMBER --body "$(cat description.txt)"
    - name: add PR Comment
      uses: actions/github-script@v7
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const header = `| :robot::robot: HYDRATION RESULTS FROM PREVIOUS COMMIT :robot::robot: | 
          | --- |`;
          const report = `${{ steps.create-report.outputs.REPORT }}`;
          const body = header + "\n" + report;

          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: body
          });
